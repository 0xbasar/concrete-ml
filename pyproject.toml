[tool.poetry]
name = "concrete-ml"
version = "0.4.0-rc0"
description = "Concrete-ML is an open-source set of tools which aims to simplify the use of fully homomorphic encryption (FHE) for data scientists."
license = "BSD-3-Clause-Clear"
authors = [
    "Zama <hello@zama.ai>",
]
homepage = "https://zama.ai/concrete-ml/"
repository = "https://github.com/zama-ai/concrete-ml"
documentation = "http://docs.zama.ai/concrete-ml/"
keywords = ["FHE", "homomorphic encryption", "privacy", "security"]
packages = [
    { include = "concrete", from = "src" },
]
classifiers = [
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering",
    "Topic :: Security",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Compilers",
]
readme = "pypi_readme.md"

[tool.poetry.urls]
"README" = "https://github.com/zama-ai/concrete-ml/blob/main/README.md"
"Bug Tracker" = "https://github.com/zama-ai/concrete-ml/issues"

[tool.poetry.dependencies]
python = ">=3.8,<3.10"
concrete-numpy = "0.8.0"
numpy = "^1.22.3"
setuptools = "*"
onnx = "^1.11.0"
scipy = "^1.8.0"
xgboost = "^1.5.2"
skorch = "^0.11.0"
scikit-learn = "^1.1.0"
torch = "^1.11.0"
hummingbird-ml = {version="^0.4.4", extras = ["onnx"]}
protobuf = "3.19.4"
# FIXME: Update to remote brevitas repo after patches are merged
# https://github.com/zama-ai/concrete-ml-internal/issues/1388
brevitas = { git = "https://github.com/zama-ai/brevitas.git", branch = "master" }
onnxoptimizer = "^0.2.7"

[tool.poetry.dev-dependencies]
isort = "^5.10.1"
black = "^22.1.0"
pylint = "^2.13.0"
pytest = "^7.1.1"
pytest-cov = "^3.0.0"
pytest_codeblocks = "^0.14.0"
mypy = "^0.942"
pydocstyle = "^6.1.1"
flake8 = "^4.0.1"
flake8-bugbear = "^22.3.23"
python-semantic-release = "^7.27.0"
semver = "^2.13.0"
tomlkit = "^0.7.0"
pytest-xdist = "^2.5.0"
pytest-randomly = "^3.11.0"
nbmake = "^1.3.0"
sphinx-zama-theme = "^3.0.2"
nbsphinx = "^0.8.7"
pygments-style-tomorrow = "^1.0.0"
pytest-repeat = "^0.9.1"
mdformat = "^0.7.14"
mdformat_myst = "^0.1.4"
mdformat-toc = "^0.3.0"
pip-audit = "^2.1.0"
jupyter = "^1.0.0"
py-progress-tracker = "^0.5.0"
nbqa = "^1.3.1"
darglint = "^1.8.1"
linkcheckmd = "^1.4.0"
keyring = "*"
# pandas is required for some of our notebooks but not by our source code
pandas = "^1.4.1"
jinja2 = "^3.1.2"
LinkChecker = "^10.1.0"
kaggle = "^1.5.12"
tensorflow = "^2.8.0"
tf2onnx = "^1.10.1"
sphinx-rtd-theme = "^1.0.0"
boto3 = "^1.23.5"
paramiko = "^2.11.0"
types-paramiko = "^2.10.0"
requests = "^2.28.0"
types-requests = "^2.28.0"
transformers = "^4.20.1"
pdoc3 = "^0.10.0"
lazydocs = "^0.4.0"
seaborn = "^0.12.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore:`np\\.object` is a deprecated alias for the builtin `object`\\. To silence this warning, use `object` by itself\\. Doing this will not modify any behavior and is safe\\.:DeprecationWarning",
    "ignore:Using or importing the ABCs from 'collections' instead of from 'collections\\.abc' is deprecated.*:DeprecationWarning",
    "ignore: distutils Version classes are deprecated. Use packaging\\.version instead.*:DeprecationWarning",
    "ignore: forcing n_jobs = 1 on mac for segfault issue",
    "ignore: allowzero=0 by default.*:UserWarning",
    "ignore:Implicitly cleaning up:ResourceWarning"
]

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
version_variable = "docs/conf.py:release,src/concrete/ml/version.py:__version__"
upload_to_pypi = "False"
changelog_sections = "breaking, feature, fix, documentation, performance"
